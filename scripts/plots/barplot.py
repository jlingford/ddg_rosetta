import polars as pl
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# import dataset
df = pl.read_csv("example_data/rosetta_ddg.csv")

# make plot
fig, ax = plt.subplots()

# set limits of figure size before despining
plt.ylim(-2, 8)

# define way to see if average is > 0 or < 0, and color the bar differently if so
av = df.group_by(["mutation_label"]).agg(pl.col(["total_score"]).mean())
colors = [1 if c >= 0 else 0 for c in av["total_score"]]

# make barplot
ax = sns.barplot(
    av,
    x="mutation_label",
    y="total_score",
    ax=ax,
    zorder=0,
    errorbar=None,
    # width=1.4,
    hue=colors,
    palette=sns.color_palette("pastel"),
    order=df["mutation_label"],
)

# overlay swarmplot on top of barplot
ax = sns.swarmplot(
    df,
    x="mutation_label",
    y="total_score",
    ax=ax,
    zorder=0.5,
    color="gray",
    alpha=0.4,
    size=6,
    linewidth=0.2,
    edgecolor="black",
)
# remove autogenerated legend
ax.get_legend().remove()

# add line border to bars
for bar in ax.patches:
    bar.set_linewidth(0.5)
    bar.set_edgecolor("gray")

# add horizotal lines to mark neutral zone
plt.axhline(y=0, color="black", linewidth=1)
plt.axhline(y=1, color="black", linestyle="--", dashes=(5, 5), linewidth=1)
plt.axhline(y=-1, color="black", linestyle="--", dashes=(5, 5), linewidth=1)

# remove top and right spines, and trim spines
sns.despine(offset=5, trim=True)

# set minor y ticks
t = np.arange(-2, 8, 1)
plt.yticks(ticks=t, minor=True)

# axis labels
plt.ylabel("Average ${\Delta\Delta G}$ (kcal mol$^-$$^1$)")
plt.xlabel("")
plt.xticks(rotation=-45)
plt.rcParams["font.family"] = "sans-serif"
plt.rcParams["font.sans-serif"] = ["Nimbus Sans"]

# save plot
plt.savefig("ddg_barplot.svg", format="svg", dpi=300)
plt.savefig("ddg_barplot.pdf", format="pdf", dpi=300)
plt.savefig("ddg_barplot.png", format="png", dpi=300)

# show plot
plt.show()
